@inherits LayoutComponentBase
@inject AccountService AccountService
@inject IStringLocalizer<Resource> R
@inject StateService StateService
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand navbar-light bg-light" style="min-width:1000px">
    <AuthorizeView>
    <Authorized>

    @if (StateService != null
    && StateService.User != null)
    {
        <ul class="navbar-nav">
            <li class="container-fluid">
                <a class="navbar-brand" href="./">@R["Homepage"]</a>
            </li>
            <li class="nav-item px-3">
                <a class="nav-link" aria-current="page" href="./Dashboard">@R["Dashboard"]</a>
            </li>
            <li class="nav-item px-3">
                <a class="nav-link" aria-current="page" href="./Reservation">@R["Reservation"]</a>
            </li>
            @if (StateService.Claims != null
           && StateService.Claims.IsAdmin())
            {
                <li class="nav-item px-3 dropdown">
                    <a class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown" href="javascript:void(0)"
               @onclick="e => this.show = !this.show">
                        @R["Maintenance"]
                    </a>
                    <ul class="dropdown-menu @(show? "show":"")"
                @onclick="e => this.show = !this.show"
                @onmouseover="OutFocus">
                        <li><a class="dropdown-item" href="./maintenance/users">@R["Users"]</a></li>
                        <li><a class="dropdown-item" href="./maintenance/ReservationNodes">@R["ReservationNodes"]</a></li>
                    </ul>
                </li>
            }
        </ul>
        <ul class="navbar-nav ms-auto">
                <li class="nav-item px-3">
                    @if (StateService.User != null)
                    {
                        <a class="nav-link" aria-current="page"
               href="" @onclick="(()=> showUserInformation=true)">
                            @StateService.User.FirstName @StateService.User.LastName
                        </a>
                    }
                </li>
            <li class="nav-item px-3">
                <button class="btn" @onclick="Logout">@R["Logout"]</button>
            </li>
        </ul>
    }
    </Authorized>
    <NotAuthorized>
        <ul class="navbar-nav ms-auto">
            <li class="nav-item px-3">
                <a class="nav-link" aria-current="page" href="./Account/Login">@R["Login"]</a>
            </li>
        </ul>
    </NotAuthorized>
    </AuthorizeView>
</nav>
@if (showUserInformation)
{
    <Start2.Client.Pages.Account.UserInformation CloseDialog="CloseDialog" />
}
@Body

@code
{
    private Start2.Client.Pages.Account.UserInformation userInformation = default!;
    private bool showUserInformation = false;

    private bool show = false;
    private async Task OutFocus()
    {
        await Task.Delay(3000);
        this.show = false;
    }

    private void CloseDialog()
    {
        showUserInformation = false;
    }
    private async Task  Logout()
    {
        await AccountService.LogoutAsync();
        NavigationManager.NavigateTo("./");
    }
}